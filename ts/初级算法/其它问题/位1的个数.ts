const hammingWeight = function(n:number) {
  const m1 = 0x55555555; //binary: 0101...
  const m2 = 0x33333333; //binary: 00110011..
  const m4 = 0x0f0f0f0f; //binary:  4 zeros,  4 ones ...
  const m8 = 0x00ff00ff; //binary:  8 zeros,  8 ones ...
  const m16 = 0x0000ffff; //binary: 16 zeros, 16 ones ...
  const m32 = 0xffffffff; //binary: 32 zeros, 32 ones ...
  const h01 = 0x01010101; //the sum of 256 to the power of 0,1,2,3...
  let x = n;
  x = (x & m1 ) + ((x >>  1) & m1 ); //put count of each  2 bits into those  2 bits
  x = (x & m2 ) + ((x >>  2) & m2 ); //put count of each  4 bits into those  4 bits
  x = (x & m4 ) + ((x >>  4) & m4 ); //put count of each  8 bits into those  8 bits
  x = (x * h01) >> 24;
  return x;
};
hammingWeight(0b00000000000000000000000000001011);